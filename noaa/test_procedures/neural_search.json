    {
      "name": "hybrid-query-aggs",
      "description": "Indexes the whole document corpus using OpenSearch default settings. We only adjust the number of replicas as we benchmark a single node cluster and Benchmark will only start the benchmark if the cluster turns green and we want to ensure that we don't use the query cache. Document ids are unique so all index operations are append only. After that a couple of queries are run.",
      "default": false,
      "schedule": [
        {{ benchmark.collect(parts="neural-search-common/create-index-ingest-docs.json") }},
        {{ benchmark.collect(parts="neural-search-common/check-status-add-resources-no-index.json") }},
        {{ benchmark.collect(parts="neural-search-common/multiple-subqueries-search.json") }},
        {{ benchmark.collect(parts="neural-search-common/single-subquery-small-set-search.json") }}
      ]
    },
    {
      "name": "hybrid-query-aggs-create-and-index",
      "description": "Indexes the whole document corpus using OpenSearch default settings. We only adjust the number of replicas as we benchmark a single node cluster and Benchmark will only start the benchmark if the cluster turns green and we want to ensure that we don't use the query cache. Document ids are unique so all index operations are append only. After that a couple of queries are run.",
      "default": false,
      "schedule": [
        {{ benchmark.collect(parts="neural-search-common/create-index-ingest-docs.json") }},
        {{ benchmark.collect(parts="neural-search-common/check-status-add-resources-no-index.json") }}
      ]
    },
    {
      "name": "hybrid-query-aggs-no-index",
      "description": "Run search queries for aggreagtions and hybrid queries without indexing documents first. Assume the index exists and documents are ingested.",
      "default": false,
      "schedule": [
        {{ benchmark.collect(parts="neural-search-common/check-status-add-resources-no-index.json") }},
        {{ benchmark.collect(parts="neural-search-common/multiple-subqueries-search.json") }},
        {{ benchmark.collect(parts="neural-search-common/single-subquery-small-set-search.json") }}
      ]
    },
    {
      "name": "hybrid-query-aggs-test",
      "description": "Test procedure to trying stuff",
      "default": false,
      "schedule": [
        {{ benchmark.collect(parts="neural-search-common/profiler-workflow.json") }}
      ]
    },
    {
      "name": "hybrid-query-test",
      "description": "Test procedure to trying stuff",
      "default": false,
      "schedule": [
        {{ benchmark.collect(parts="neural-search-common/profiler-workflow-no-aggs.json") }}
      ]
    },
    {
      "name": "hybrid-query-aggs-test-profiler",
      "description": "Test procedure to trying stuff",
      "default": false,
      "schedule": [
        {
          "operation": "hybrid-query-only-term-range-date",
          "warmup-iterations": 100,
          "iterations": 300
          {%- if not target_throughput %}
          ,"target-throughput": 6
          {%- elif target_throughput is string and target_throughput.lower() == 'none' %}
          {%- else %}
          ,"target-throughput": {{ target_throughput | tojson }}
          {%- endif %}
          {%- if search_clients is defined and search_clients %}
          ,"clients": {{ search_clients | tojson}}
          {%- endif %}
        }
      ]
    },
    {
      "name": "hybrid-query-aggs-test-profiler-2",
      "description": "Test procedure to trying stuff",
      "default": false,
      "schedule": [
        {
          "operation": "bool-only-term-range-date",
          "warmup-iterations": 250,
          "iterations": 500
          {%- if not target_throughput %}
          ,"target-throughput": 6
          {%- elif target_throughput is string and target_throughput.lower() == 'none' %}
          {%- else %}
          ,"target-throughput": {{ target_throughput | tojson }}
          {%- endif %}
          {%- if search_clients is defined and search_clients %}
          ,"clients": {{ search_clients | tojson}}
          {%- endif %}
        }
      ]
    }